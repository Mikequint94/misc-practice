// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render correctly 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <FormContainer />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": FormContainer {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form
                  class="container"
                >
                  Please Enter Your Information Below
                  <div>
                    <input
                      name="name"
                      placeholder="Name"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cardNumber"
                      placeholder="Card Number"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cvv2"
                      placeholder="CVV2"
                      type="number"
                      value=""
                    />
                  </div>
                  <div>
                    <div
                      class="expiration"
                    >
                      <input
                        name="expirationMonth"
                        placeholder="Exp. Month"
                        type="number"
                        value=""
                      />
                      <input
                        name="expirationYear"
                        placeholder="Exp. Year"
                        type="number"
                        value=""
                      />
                    </div>
                    <div
                      class="expiration-errors"
                    >
                      <div
                        class="error"
                      />
                      <div />
                    </div>
                  </div>
                  <div
                    class="logos"
                  >
                    <img
                      alt="Visa Logo"
                      class=""
                      src="visa-icon.png"
                    />
                    <img
                      alt="Amex Logo"
                      class=""
                      src="amex-icon.png"
                    />
                  </div>
                  <input
                    class="submit"
                    disabled=""
                    type="submit"
                    value="Submit"
                  />
                </form>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form
                  class="container"
                >
                  Please Enter Your Information Below
                  <div>
                    <input
                      name="name"
                      placeholder="Name"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cardNumber"
                      placeholder="Card Number"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cvv2"
                      placeholder="CVV2"
                      type="number"
                      value=""
                    />
                  </div>
                  <div>
                    <div
                      class="expiration"
                    >
                      <input
                        name="expirationMonth"
                        placeholder="Exp. Month"
                        type="number"
                        value=""
                      />
                      <input
                        name="expirationYear"
                        placeholder="Exp. Year"
                        type="number"
                        value=""
                      />
                    </div>
                    <div
                      class="expiration-errors"
                    >
                      <div
                        class="error"
                      />
                      <div />
                    </div>
                  </div>
                  <div
                    class="logos"
                  >
                    <img
                      alt="Visa Logo"
                      class=""
                      src="visa-icon.png"
                    />
                    <img
                      alt="Amex Logo"
                      class=""
                      src="amex-icon.png"
                    />
                  </div>
                  <input
                    class="submit"
                    disabled=""
                    type="submit"
                    value="Submit"
                  />
                </form>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
            "lineNumber": 80,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": "Please Enter Your Information Below",
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": "Please Enter Your Information Below",
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                "lineNumber": 82,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 59,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/Name.js",
                  "lineNumber": 8,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 60,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/Name.js",
                    "lineNumber": 9,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "input",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "name": "name",
                    "onChange": [Function],
                    "placeholder": "Name",
                    "type": "text",
                    "value": "",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "name": "name",
                    "onChange": [Function],
                    "placeholder": "Name",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <input
                    name="name"
                    placeholder="Name"
                    type="text"
                    value=""
                  />,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "input",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <input
                      name="name"
                      onChange={[Function]}
                      placeholder="Name"
                      type="text"
                      value=""
                    />,
                    null,
                  ],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <input
                      name="name"
                      onChange={[Function]}
                      placeholder="Name"
                      type="text"
                      value=""
                    />,
                    null,
                  ],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div>
                  <input
                    name="name"
                    placeholder="Name"
                    type="text"
                    value=""
                  />
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "handleFormChange": [Function],
                "nameError": false,
                "nameValue": "",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "handleFormChange": [Function],
                "nameError": false,
                "nameValue": "",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                  "lineNumber": 86,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 61,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CardNumber.js",
                    "lineNumber": 9,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 62,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CardNumber.js",
                      "lineNumber": 10,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "name": "cardNumber",
                      "onChange": [Function],
                      "placeholder": "Card Number",
                      "type": "text",
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "name": "cardNumber",
                      "onChange": [Function],
                      "placeholder": "Card Number",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      name="cardNumber"
                      placeholder="Card Number"
                      type="text"
                      value=""
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        name="cardNumber"
                        onChange={[Function]}
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />,
                      null,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        name="cardNumber"
                        onChange={[Function]}
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />,
                      null,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div>
                    <input
                      name="cardNumber"
                      placeholder="Card Number"
                      type="text"
                      value=""
                    />
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "cardNumberError": false,
                  "cardNumberValue": "",
                  "handleFormChange": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "cardNumberError": false,
                  "cardNumberValue": "",
                  "handleFormChange": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                    "lineNumber": 90,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 63,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CVV2.js",
                      "lineNumber": 8,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 64,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CVV2.js",
                        "lineNumber": 9,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "name": "cvv2",
                        "onChange": [Function],
                        "placeholder": "CVV2",
                        "type": "number",
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "name": "cvv2",
                        "onChange": [Function],
                        "placeholder": "CVV2",
                        "type": "number",
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <input
                          name="cvv2"
                          onChange={[Function]}
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />,
                        null,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <input
                          name="cvv2"
                          onChange={[Function]}
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />,
                        null,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "cvv2Error": false,
                    "cvv2Value": "",
                    "handleFormChange": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "cvv2Error": false,
                    "cvv2Value": "",
                    "handleFormChange": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                      "lineNumber": 94,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 65,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                        "lineNumber": 9,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 66,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                          "lineNumber": 10,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 68,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                            "lineNumber": 11,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "input",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "name": "expirationMonth",
                            "onChange": [Function],
                            "placeholder": "Exp. Month",
                            "type": "number",
                            "value": "",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "name": "expirationMonth",
                            "onChange": [Function],
                            "placeholder": "Exp. Month",
                            "type": "number",
                            "value": "",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 69,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                              "lineNumber": 16,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "input",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "name": "expirationYear",
                              "onChange": [Function],
                              "placeholder": "Exp. Year",
                              "type": "number",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "name": "expirationYear",
                              "onChange": [Function],
                              "placeholder": "Exp. Year",
                              "type": "number",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <input
                              name="expirationYear"
                              placeholder="Exp. Year"
                              type="number"
                              value=""
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <input
                            name="expirationMonth"
                            placeholder="Exp. Month"
                            type="number"
                            value=""
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <input
                              name="expirationMonth"
                              onChange={[Function]}
                              placeholder="Exp. Month"
                              type="number"
                              value=""
                            />,
                            <input
                              name="expirationYear"
                              onChange={[Function]}
                              placeholder="Exp. Year"
                              type="number"
                              value=""
                            />,
                          ],
                          "className": "expiration",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <input
                              name="expirationMonth"
                              onChange={[Function]}
                              placeholder="Exp. Month"
                              type="number"
                              value=""
                            />,
                            <input
                              name="expirationYear"
                              onChange={[Function]}
                              placeholder="Exp. Year"
                              type="number"
                              value=""
                            />,
                          ],
                          "className": "expiration",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 67,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                            "lineNumber": 23,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 70,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                              "lineNumber": 6,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "className": "error",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "className": "error",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 71,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                                "lineNumber": 7,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {},
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {},
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "stateNode": <div
                              class="error"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <div
                                className="error"
                              />,
                              <div />,
                            ],
                            "className": "expiration-errors",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <div
                                className="error"
                              />,
                              <div />,
                            ],
                            "className": "expiration-errors",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="expiration-errors"
                          >
                            <div
                              class="error"
                            />
                            <div />
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="expiration"
                        >
                          <input
                            name="expirationMonth"
                            placeholder="Exp. Month"
                            type="number"
                            value=""
                          />
                          <input
                            name="expirationYear"
                            placeholder="Exp. Year"
                            type="number"
                            value=""
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <div
                            className="expiration"
                          >
                            <input
                              name="expirationMonth"
                              onChange={[Function]}
                              placeholder="Exp. Month"
                              type="number"
                              value=""
                            />
                            <input
                              name="expirationYear"
                              onChange={[Function]}
                              placeholder="Exp. Year"
                              type="number"
                              value=""
                            />
                          </div>,
                          <div
                            className="expiration-errors"
                          >
                            <div
                              className="error"
                            />
                            <div />
                          </div>,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <div
                            className="expiration"
                          >
                            <input
                              name="expirationMonth"
                              onChange={[Function]}
                              placeholder="Exp. Month"
                              type="number"
                              value=""
                            />
                            <input
                              name="expirationYear"
                              onChange={[Function]}
                              placeholder="Exp. Year"
                              type="number"
                              value=""
                            />
                          </div>,
                          <div
                            className="expiration-errors"
                          >
                            <div
                              className="error"
                            />
                            <div />
                          </div>,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <div
                          class="expiration"
                        >
                          <input
                            name="expirationMonth"
                            placeholder="Exp. Month"
                            type="number"
                            value=""
                          />
                          <input
                            name="expirationYear"
                            placeholder="Exp. Year"
                            type="number"
                            value=""
                          />
                        </div>
                        <div
                          class="expiration-errors"
                        >
                          <div
                            class="error"
                          />
                          <div />
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 4,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "handleFormChange": [Function],
                      "monthError": false,
                      "monthValue": "",
                      "yearError": false,
                      "yearValue": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "handleFormChange": [Function],
                      "monthError": false,
                      "monthValue": "",
                      "yearError": false,
                      "yearValue": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                        "lineNumber": 100,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 72,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                          "lineNumber": 101,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "img",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "Visa Logo",
                          "className": "",
                          "src": "visa-icon.png",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "Visa Logo",
                          "className": "",
                          "src": "visa-icon.png",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 73,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                            "lineNumber": 102,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "img",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "alt": "Amex Logo",
                            "className": "",
                            "src": "amex-icon.png",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "alt": "Amex Logo",
                            "className": "",
                            "src": "amex-icon.png",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <img
                            alt="Amex Logo"
                            class=""
                            src="amex-icon.png"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "img",
                          "updateQueue": null,
                        },
                        "stateNode": <img
                          alt="Visa Logo"
                          class=""
                          src="visa-icon.png"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 5,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <img
                            alt="Visa Logo"
                            className=""
                            src="visa-icon.png"
                          />,
                          <img
                            alt="Amex Logo"
                            className=""
                            src="amex-icon.png"
                          />,
                        ],
                        "className": "logos",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <img
                            alt="Visa Logo"
                            className=""
                            src="visa-icon.png"
                          />,
                          <img
                            alt="Amex Logo"
                            className=""
                            src="amex-icon.png"
                          />,
                        ],
                        "className": "logos",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                          "lineNumber": 104,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "input",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 6,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "className": "submit",
                          "disabled": true,
                          "type": "submit",
                          "value": "Submit",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "className": "submit",
                          "disabled": true,
                          "type": "submit",
                          "value": "Submit",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <input
                          class="submit"
                          disabled=""
                          type="submit"
                          value="Submit"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="logos"
                      >
                        <img
                          alt="Visa Logo"
                          class=""
                          src="visa-icon.png"
                        />
                        <img
                          alt="Amex Logo"
                          class=""
                          src="amex-icon.png"
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "stateNode": Please Enter Your Information Below,
            "tag": 6,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "form",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              "Please Enter Your Information Below",
              <Name
                handleFormChange={[Function]}
                nameError={false}
                nameValue=""
              />,
              <CardNumber
                cardNumberError={false}
                cardNumberValue=""
                handleFormChange={[Function]}
              />,
              <CVV2
                cvv2Error={false}
                cvv2Value=""
                handleFormChange={[Function]}
              />,
              <ExpirationDate
                handleFormChange={[Function]}
                monthError={false}
                monthValue=""
                yearError={false}
                yearValue=""
              />,
              <div
                className="logos"
              >
                <img
                  alt="Visa Logo"
                  className=""
                  src="visa-icon.png"
                />
                <img
                  alt="Amex Logo"
                  className=""
                  src="amex-icon.png"
                />
              </div>,
              <input
                className="submit"
                disabled={true}
                type="submit"
                value="Submit"
              />,
            ],
            "className": "container",
            "onSubmit": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              "Please Enter Your Information Below",
              <Name
                handleFormChange={[Function]}
                nameError={false}
                nameValue=""
              />,
              <CardNumber
                cardNumberError={false}
                cardNumberValue=""
                handleFormChange={[Function]}
              />,
              <CVV2
                cvv2Error={false}
                cvv2Value=""
                handleFormChange={[Function]}
              />,
              <ExpirationDate
                handleFormChange={[Function]}
                monthError={false}
                monthValue=""
                yearError={false}
                yearValue=""
              />,
              <div
                className="logos"
              >
                <img
                  alt="Visa Logo"
                  className=""
                  src="visa-icon.png"
                />
                <img
                  alt="Amex Logo"
                  className=""
                  src="amex-icon.png"
                />
              </div>,
              <input
                className="submit"
                disabled={true}
                type="submit"
                value="Submit"
              />,
            ],
            "className": "container",
            "onSubmit": [Function],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <form
            class="container"
          >
            Please Enter Your Information Below
            <div>
              <input
                name="name"
                placeholder="Name"
                type="text"
                value=""
              />
            </div>
            <div>
              <input
                name="cardNumber"
                placeholder="Card Number"
                type="text"
                value=""
              />
            </div>
            <div>
              <input
                name="cvv2"
                placeholder="CVV2"
                type="number"
                value=""
              />
            </div>
            <div>
              <div
                class="expiration"
              >
                <input
                  name="expirationMonth"
                  placeholder="Exp. Month"
                  type="number"
                  value=""
                />
                <input
                  name="expirationYear"
                  placeholder="Exp. Year"
                  type="number"
                  value=""
                />
              </div>
              <div
                class="expiration-errors"
              >
                <div
                  class="error"
                />
                <div />
              </div>
            </div>
            <div
              class="logos"
            >
              <img
                alt="Visa Logo"
                class=""
                src="visa-icon.png"
              />
              <img
                alt="Amex Logo"
                class=""
                src="amex-icon.png"
              />
            </div>
            <input
              class="submit"
              disabled=""
              type="submit"
              value="Submit"
            />
          </form>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "form",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "cardNumber": "",
          "cardNumberError": false,
          "cardType": false,
          "cvv2": "",
          "cvv2Error": false,
          "expirationMonth": "",
          "expirationMonthError": false,
          "expirationYear": "",
          "expirationYearError": false,
          "formValid": false,
          "name": "",
          "nameError": false,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form
                  class="container"
                >
                  Please Enter Your Information Below
                  <div>
                    <input
                      name="name"
                      placeholder="Name"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cardNumber"
                      placeholder="Card Number"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cvv2"
                      placeholder="CVV2"
                      type="number"
                      value=""
                    />
                  </div>
                  <div>
                    <div
                      class="expiration"
                    >
                      <input
                        name="expirationMonth"
                        placeholder="Exp. Month"
                        type="number"
                        value=""
                      />
                      <input
                        name="expirationYear"
                        placeholder="Exp. Year"
                        type="number"
                        value=""
                      />
                    </div>
                    <div
                      class="expiration-errors"
                    >
                      <div
                        class="error"
                      />
                      <div />
                    </div>
                  </div>
                  <div
                    class="logos"
                  >
                    <img
                      alt="Visa Logo"
                      class=""
                      src="visa-icon.png"
                    />
                    <img
                      alt="Amex Logo"
                      class=""
                      src="amex-icon.png"
                    />
                  </div>
                  <input
                    class="submit"
                    disabled=""
                    type="submit"
                    value="Submit"
                  />
                </form>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <form
                  class="container"
                >
                  Please Enter Your Information Below
                  <div>
                    <input
                      name="name"
                      placeholder="Name"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cardNumber"
                      placeholder="Card Number"
                      type="text"
                      value=""
                    />
                  </div>
                  <div>
                    <input
                      name="cvv2"
                      placeholder="CVV2"
                      type="number"
                      value=""
                    />
                  </div>
                  <div>
                    <div
                      class="expiration"
                    >
                      <input
                        name="expirationMonth"
                        placeholder="Exp. Month"
                        type="number"
                        value=""
                      />
                      <input
                        name="expirationYear"
                        placeholder="Exp. Year"
                        type="number"
                        value=""
                      />
                    </div>
                    <div
                      class="expiration-errors"
                    >
                      <div
                        class="error"
                      />
                      <div />
                    </div>
                  </div>
                  <div
                    class="logos"
                  >
                    <img
                      alt="Visa Logo"
                      class=""
                      src="visa-icon.png"
                    />
                    <img
                      alt="Amex Logo"
                      class=""
                      src="amex-icon.png"
                    />
                  </div>
                  <input
                    class="submit"
                    disabled=""
                    type="submit"
                    value="Submit"
                  />
                </form>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "checkValidForm": [Function],
      "context": Object {},
      "handleFormChange": [Function],
      "handleSubmit": [Function],
      "props": Object {},
      "refs": Object {},
      "state": Object {
        "cardNumber": "",
        "cardNumberError": false,
        "cardType": false,
        "cvv2": "",
        "cvv2Error": false,
        "expirationMonth": "",
        "expirationMonthError": false,
        "expirationYear": "",
        "expirationYearError": false,
        "formValid": false,
        "name": "",
        "nameError": false,
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <form
        class="container"
      >
        Please Enter Your Information Below
        <div>
          <input
            name="name"
            placeholder="Name"
            type="text"
            value=""
          />
        </div>
        <div>
          <input
            name="cardNumber"
            placeholder="Card Number"
            type="text"
            value=""
          />
        </div>
        <div>
          <input
            name="cvv2"
            placeholder="CVV2"
            type="number"
            value=""
          />
        </div>
        <div>
          <div
            class="expiration"
          >
            <input
              name="expirationMonth"
              placeholder="Exp. Month"
              type="number"
              value=""
            />
            <input
              name="expirationYear"
              placeholder="Exp. Year"
              type="number"
              value=""
            />
          </div>
          <div
            class="expiration-errors"
          >
            <div
              class="error"
            />
            <div />
          </div>
        </div>
        <div
          class="logos"
        >
          <img
            alt="Visa Logo"
            class=""
            src="visa-icon.png"
          />
          <img
            alt="Amex Logo"
            class=""
            src="amex-icon.png"
          />
        </div>
        <input
          class="submit"
          disabled=""
          type="submit"
          value="Submit"
        />
      </form>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "Please Enter Your Information Below",
          <Name
            handleFormChange={[Function]}
            nameError={false}
            nameValue=""
          />,
          <CardNumber
            cardNumberError={false}
            cardNumberValue=""
            handleFormChange={[Function]}
          />,
          <CVV2
            cvv2Error={false}
            cvv2Value=""
            handleFormChange={[Function]}
          />,
          <ExpirationDate
            handleFormChange={[Function]}
            monthError={false}
            monthValue=""
            yearError={false}
            yearValue=""
          />,
          <div
            className="logos"
          >
            <img
              alt="Visa Logo"
              className=""
              src="visa-icon.png"
            />
            <img
              alt="Amex Logo"
              className=""
              src="amex-icon.png"
            />
          </div>,
          <input
            className="submit"
            disabled={true}
            type="submit"
            value="Submit"
          />,
        ],
        "className": "container",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        "Please Enter Your Information Below",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleFormChange": [Function],
            "nameError": false,
            "nameValue": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": <div>
              <input
                name="name"
                placeholder="Name"
                type="text"
                value=""
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  name="name"
                  onChange={[Function]}
                  placeholder="Name"
                  type="text"
                  value=""
                />,
                null,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <input
                  name="name"
                  placeholder="Name"
                  type="text"
                  value=""
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "name",
                  "onChange": [Function],
                  "placeholder": "Name",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "cardNumberError": false,
            "cardNumberValue": "",
            "handleFormChange": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": <div>
              <input
                name="cardNumber"
                placeholder="Card Number"
                type="text"
                value=""
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  name="cardNumber"
                  onChange={[Function]}
                  placeholder="Card Number"
                  type="text"
                  value=""
                />,
                null,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <input
                  name="cardNumber"
                  placeholder="Card Number"
                  type="text"
                  value=""
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "cardNumber",
                  "onChange": [Function],
                  "placeholder": "Card Number",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "cvv2Error": false,
            "cvv2Value": "",
            "handleFormChange": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": <div>
              <input
                name="cvv2"
                placeholder="CVV2"
                type="number"
                value=""
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  name="cvv2"
                  onChange={[Function]}
                  placeholder="CVV2"
                  type="number"
                  value=""
                />,
                null,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <input
                  name="cvv2"
                  placeholder="CVV2"
                  type="number"
                  value=""
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "name": "cvv2",
                  "onChange": [Function],
                  "placeholder": "CVV2",
                  "type": "number",
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "input",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleFormChange": [Function],
            "monthError": false,
            "monthValue": "",
            "yearError": false,
            "yearValue": "",
          },
          "ref": null,
          "rendered": Object {
            "instance": <div>
              <div
                class="expiration"
              >
                <input
                  name="expirationMonth"
                  placeholder="Exp. Month"
                  type="number"
                  value=""
                />
                <input
                  name="expirationYear"
                  placeholder="Exp. Year"
                  type="number"
                  value=""
                />
              </div>
              <div
                class="expiration-errors"
              >
                <div
                  class="error"
                />
                <div />
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="expiration"
                >
                  <input
                    name="expirationMonth"
                    onChange={[Function]}
                    placeholder="Exp. Month"
                    type="number"
                    value=""
                  />
                  <input
                    name="expirationYear"
                    onChange={[Function]}
                    placeholder="Exp. Year"
                    type="number"
                    value=""
                  />
                </div>,
                <div
                  className="expiration-errors"
                >
                  <div
                    className="error"
                  />
                  <div />
                </div>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="expiration"
                >
                  <input
                    name="expirationMonth"
                    placeholder="Exp. Month"
                    type="number"
                    value=""
                  />
                  <input
                    name="expirationYear"
                    placeholder="Exp. Year"
                    type="number"
                    value=""
                  />
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      name="expirationMonth"
                      onChange={[Function]}
                      placeholder="Exp. Month"
                      type="number"
                      value=""
                    />,
                    <input
                      name="expirationYear"
                      onChange={[Function]}
                      placeholder="Exp. Year"
                      type="number"
                      value=""
                    />,
                  ],
                  "className": "expiration",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <input
                      name="expirationMonth"
                      placeholder="Exp. Month"
                      type="number"
                      value=""
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "expirationMonth",
                      "onChange": [Function],
                      "placeholder": "Exp. Month",
                      "type": "number",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "input",
                  },
                  Object {
                    "instance": <input
                      name="expirationYear"
                      placeholder="Exp. Year"
                      type="number"
                      value=""
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "name": "expirationYear",
                      "onChange": [Function],
                      "placeholder": "Exp. Year",
                      "type": "number",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="expiration-errors"
                >
                  <div
                    class="error"
                  />
                  <div />
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="error"
                    />,
                    <div />,
                  ],
                  "className": "expiration-errors",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div
                      class="error"
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "error",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <div />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": <div
            class="logos"
          >
            <img
              alt="Visa Logo"
              class=""
              src="visa-icon.png"
            />
            <img
              alt="Amex Logo"
              class=""
              src="amex-icon.png"
            />
          </div>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="Visa Logo"
                className=""
                src="visa-icon.png"
              />,
              <img
                alt="Amex Logo"
                className=""
                src="amex-icon.png"
              />,
            ],
            "className": "logos",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <img
                alt="Visa Logo"
                class=""
                src="visa-icon.png"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Visa Logo",
                "className": "",
                "src": "visa-icon.png",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "img",
            },
            Object {
              "instance": <img
                alt="Amex Logo"
                class=""
                src="amex-icon.png"
              />,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Amex Logo",
                "className": "",
                "src": "amex-icon.png",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "img",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": <input
            class="submit"
            disabled=""
            type="submit"
            value="Submit"
          />,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "submit",
            "disabled": true,
            "type": "submit",
            "value": "Submit",
          },
          "ref": null,
          "rendered": Array [
            undefined,
          ],
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": FormContainer {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form
                      class="container"
                    >
                      Please Enter Your Information Below
                      <div>
                        <input
                          name="name"
                          placeholder="Name"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cardNumber"
                          placeholder="Card Number"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cvv2"
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />
                      </div>
                      <div>
                        <div
                          class="expiration"
                        >
                          <input
                            name="expirationMonth"
                            placeholder="Exp. Month"
                            type="number"
                            value=""
                          />
                          <input
                            name="expirationYear"
                            placeholder="Exp. Year"
                            type="number"
                            value=""
                          />
                        </div>
                        <div
                          class="expiration-errors"
                        >
                          <div
                            class="error"
                          />
                          <div />
                        </div>
                      </div>
                      <div
                        class="logos"
                      >
                        <img
                          alt="Visa Logo"
                          class=""
                          src="visa-icon.png"
                        />
                        <img
                          alt="Amex Logo"
                          class=""
                          src="amex-icon.png"
                        />
                      </div>
                      <input
                        class="submit"
                        disabled=""
                        type="submit"
                        value="Submit"
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form
                      class="container"
                    >
                      Please Enter Your Information Below
                      <div>
                        <input
                          name="name"
                          placeholder="Name"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cardNumber"
                          placeholder="Card Number"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cvv2"
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />
                      </div>
                      <div>
                        <div
                          class="expiration"
                        >
                          <input
                            name="expirationMonth"
                            placeholder="Exp. Month"
                            type="number"
                            value=""
                          />
                          <input
                            name="expirationYear"
                            placeholder="Exp. Year"
                            type="number"
                            value=""
                          />
                        </div>
                        <div
                          class="expiration-errors"
                        >
                          <div
                            class="error"
                          />
                          <div />
                        </div>
                      </div>
                      <div
                        class="logos"
                      >
                        <img
                          alt="Visa Logo"
                          class=""
                          src="visa-icon.png"
                        />
                        <img
                          alt="Amex Logo"
                          class=""
                          src="amex-icon.png"
                        />
                      </div>
                      <input
                        class="submit"
                        disabled=""
                        type="submit"
                        value="Submit"
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
              "lineNumber": 80,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": "Please Enter Your Information Below",
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": "Please Enter Your Information Below",
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                  "lineNumber": 82,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 59,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/Name.js",
                    "lineNumber": 8,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 60,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/Name.js",
                      "lineNumber": 9,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "input",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "name": "name",
                      "onChange": [Function],
                      "placeholder": "Name",
                      "type": "text",
                      "value": "",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "name": "name",
                      "onChange": [Function],
                      "placeholder": "Name",
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <input
                      name="name"
                      placeholder="Name"
                      type="text"
                      value=""
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "input",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <input
                        name="name"
                        onChange={[Function]}
                        placeholder="Name"
                        type="text"
                        value=""
                      />,
                      null,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <input
                        name="name"
                        onChange={[Function]}
                        placeholder="Name"
                        type="text"
                        value=""
                      />,
                      null,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div>
                    <input
                      name="name"
                      placeholder="Name"
                      type="text"
                      value=""
                    />
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "handleFormChange": [Function],
                  "nameError": false,
                  "nameValue": "",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "handleFormChange": [Function],
                  "nameError": false,
                  "nameValue": "",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 54,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                    "lineNumber": 86,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 61,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CardNumber.js",
                      "lineNumber": 9,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 62,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CardNumber.js",
                        "lineNumber": 10,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "input",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "name": "cardNumber",
                        "onChange": [Function],
                        "placeholder": "Card Number",
                        "type": "text",
                        "value": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "name": "cardNumber",
                        "onChange": [Function],
                        "placeholder": "Card Number",
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "input",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <input
                          name="cardNumber"
                          onChange={[Function]}
                          placeholder="Card Number"
                          type="text"
                          value=""
                        />,
                        null,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <input
                          name="cardNumber"
                          onChange={[Function]}
                          placeholder="Card Number"
                          type="text"
                          value=""
                        />,
                        null,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 1,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "cardNumberError": false,
                    "cardNumberValue": "",
                    "handleFormChange": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "cardNumberError": false,
                    "cardNumberValue": "",
                    "handleFormChange": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 55,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                      "lineNumber": 90,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 63,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CVV2.js",
                        "lineNumber": 8,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 64,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/CVV2.js",
                          "lineNumber": 9,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "input",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "name": "cvv2",
                          "onChange": [Function],
                          "placeholder": "CVV2",
                          "type": "number",
                          "value": "",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "name": "cvv2",
                          "onChange": [Function],
                          "placeholder": "CVV2",
                          "type": "number",
                          "value": "",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <input
                          name="cvv2"
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "input",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <input
                            name="cvv2"
                            onChange={[Function]}
                            placeholder="CVV2"
                            type="number"
                            value=""
                          />,
                          null,
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <input
                            name="cvv2"
                            onChange={[Function]}
                            placeholder="CVV2"
                            type="number"
                            value=""
                          />,
                          null,
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div>
                        <input
                          name="cvv2"
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "cvv2Error": false,
                      "cvv2Value": "",
                      "handleFormChange": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "cvv2Error": false,
                      "cvv2Value": "",
                      "handleFormChange": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 56,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                        "lineNumber": 94,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 65,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                          "lineNumber": 9,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 66,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                            "lineNumber": 10,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 68,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                              "lineNumber": 11,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "input",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "name": "expirationMonth",
                              "onChange": [Function],
                              "placeholder": "Exp. Month",
                              "type": "number",
                              "value": "",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "name": "expirationMonth",
                              "onChange": [Function],
                              "placeholder": "Exp. Month",
                              "type": "number",
                              "value": "",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 69,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                                "lineNumber": 16,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "input",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "name": "expirationYear",
                                "onChange": [Function],
                                "placeholder": "Exp. Year",
                                "type": "number",
                                "value": "",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "name": "expirationYear",
                                "onChange": [Function],
                                "placeholder": "Exp. Year",
                                "type": "number",
                                "value": "",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <input
                                name="expirationYear"
                                placeholder="Exp. Year"
                                type="number"
                                value=""
                              />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <input
                              name="expirationMonth"
                              placeholder="Exp. Month"
                              type="number"
                              value=""
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <input
                                name="expirationMonth"
                                onChange={[Function]}
                                placeholder="Exp. Month"
                                type="number"
                                value=""
                              />,
                              <input
                                name="expirationYear"
                                onChange={[Function]}
                                placeholder="Exp. Year"
                                type="number"
                                value=""
                              />,
                            ],
                            "className": "expiration",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <input
                                name="expirationMonth"
                                onChange={[Function]}
                                placeholder="Exp. Month"
                                type="number"
                                value=""
                              />,
                              <input
                                name="expirationYear"
                                onChange={[Function]}
                                placeholder="Exp. Year"
                                type="number"
                                value=""
                              />,
                            ],
                            "className": "expiration",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 67,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                              "lineNumber": 23,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 70,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                                "lineNumber": 6,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "error",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "error",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 71,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/fields/ExpirationDate.js",
                                  "lineNumber": 7,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "div",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 1,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <div />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "stateNode": <div
                                class="error"
                              />,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <div
                                  className="error"
                                />,
                                <div />,
                              ],
                              "className": "expiration-errors",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": Array [
                                <div
                                  className="error"
                                />,
                                <div />,
                              ],
                              "className": "expiration-errors",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="expiration-errors"
                            >
                              <div
                                class="error"
                              />
                              <div />
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "stateNode": <div
                            class="expiration"
                          >
                            <input
                              name="expirationMonth"
                              placeholder="Exp. Month"
                              type="number"
                              value=""
                            />
                            <input
                              name="expirationYear"
                              placeholder="Exp. Year"
                              type="number"
                              value=""
                            />
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <div
                              className="expiration"
                            >
                              <input
                                name="expirationMonth"
                                onChange={[Function]}
                                placeholder="Exp. Month"
                                type="number"
                                value=""
                              />
                              <input
                                name="expirationYear"
                                onChange={[Function]}
                                placeholder="Exp. Year"
                                type="number"
                                value=""
                              />
                            </div>,
                            <div
                              className="expiration-errors"
                            >
                              <div
                                className="error"
                              />
                              <div />
                            </div>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <div
                              className="expiration"
                            >
                              <input
                                name="expirationMonth"
                                onChange={[Function]}
                                placeholder="Exp. Month"
                                type="number"
                                value=""
                              />
                              <input
                                name="expirationYear"
                                onChange={[Function]}
                                placeholder="Exp. Year"
                                type="number"
                                value=""
                              />
                            </div>,
                            <div
                              className="expiration-errors"
                            >
                              <div
                                className="error"
                              />
                              <div />
                            </div>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div>
                          <div
                            class="expiration"
                          >
                            <input
                              name="expirationMonth"
                              placeholder="Exp. Month"
                              type="number"
                              value=""
                            />
                            <input
                              name="expirationYear"
                              placeholder="Exp. Year"
                              type="number"
                              value=""
                            />
                          </div>
                          <div
                            class="expiration-errors"
                          >
                            <div
                              class="error"
                            />
                            <div />
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 4,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "handleFormChange": [Function],
                        "monthError": false,
                        "monthValue": "",
                        "yearError": false,
                        "yearValue": "",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "handleFormChange": [Function],
                        "monthError": false,
                        "monthValue": "",
                        "yearError": false,
                        "yearValue": "",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 57,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                          "lineNumber": 100,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 72,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                            "lineNumber": 101,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "img",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "alt": "Visa Logo",
                            "className": "",
                            "src": "visa-icon.png",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "alt": "Visa Logo",
                            "className": "",
                            "src": "visa-icon.png",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 73,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                              "lineNumber": 102,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "img",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "alt": "Amex Logo",
                              "className": "",
                              "src": "amex-icon.png",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "alt": "Amex Logo",
                              "className": "",
                              "src": "amex-icon.png",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <img
                              alt="Amex Logo"
                              class=""
                              src="amex-icon.png"
                            />,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "img",
                            "updateQueue": null,
                          },
                          "stateNode": <img
                            alt="Visa Logo"
                            class=""
                            src="visa-icon.png"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "img",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 5,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <img
                              alt="Visa Logo"
                              className=""
                              src="visa-icon.png"
                            />,
                            <img
                              alt="Amex Logo"
                              className=""
                              src="amex-icon.png"
                            />,
                          ],
                          "className": "logos",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <img
                              alt="Visa Logo"
                              className=""
                              src="visa-icon.png"
                            />,
                            <img
                              alt="Amex Logo"
                              className=""
                              src="amex-icon.png"
                            />,
                          ],
                          "className": "logos",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 58,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ZhaoHarris/Desktop/Coding Practice/exercises/affirm-challenge/src/FormContainer.js",
                            "lineNumber": 104,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "input",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 6,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "className": "submit",
                            "disabled": true,
                            "type": "submit",
                            "value": "Submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "className": "submit",
                            "disabled": true,
                            "type": "submit",
                            "value": "Submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <input
                            class="submit"
                            disabled=""
                            type="submit"
                            value="Submit"
                          />,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "input",
                          "updateQueue": null,
                        },
                        "stateNode": <div
                          class="logos"
                        >
                          <img
                            alt="Visa Logo"
                            class=""
                            src="visa-icon.png"
                          />
                          <img
                            alt="Amex Logo"
                            class=""
                            src="amex-icon.png"
                          />
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 0,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": Please Enter Your Information Below,
              "tag": 6,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "form",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                "Please Enter Your Information Below",
                <Name
                  handleFormChange={[Function]}
                  nameError={false}
                  nameValue=""
                />,
                <CardNumber
                  cardNumberError={false}
                  cardNumberValue=""
                  handleFormChange={[Function]}
                />,
                <CVV2
                  cvv2Error={false}
                  cvv2Value=""
                  handleFormChange={[Function]}
                />,
                <ExpirationDate
                  handleFormChange={[Function]}
                  monthError={false}
                  monthValue=""
                  yearError={false}
                  yearValue=""
                />,
                <div
                  className="logos"
                >
                  <img
                    alt="Visa Logo"
                    className=""
                    src="visa-icon.png"
                  />
                  <img
                    alt="Amex Logo"
                    className=""
                    src="amex-icon.png"
                  />
                </div>,
                <input
                  className="submit"
                  disabled={true}
                  type="submit"
                  value="Submit"
                />,
              ],
              "className": "container",
              "onSubmit": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                "Please Enter Your Information Below",
                <Name
                  handleFormChange={[Function]}
                  nameError={false}
                  nameValue=""
                />,
                <CardNumber
                  cardNumberError={false}
                  cardNumberValue=""
                  handleFormChange={[Function]}
                />,
                <CVV2
                  cvv2Error={false}
                  cvv2Value=""
                  handleFormChange={[Function]}
                />,
                <ExpirationDate
                  handleFormChange={[Function]}
                  monthError={false}
                  monthValue=""
                  yearError={false}
                  yearValue=""
                />,
                <div
                  className="logos"
                >
                  <img
                    alt="Visa Logo"
                    className=""
                    src="visa-icon.png"
                  />
                  <img
                    alt="Amex Logo"
                    className=""
                    src="amex-icon.png"
                  />
                </div>,
                <input
                  className="submit"
                  disabled={true}
                  type="submit"
                  value="Submit"
                />,
              ],
              "className": "container",
              "onSubmit": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <form
              class="container"
            >
              Please Enter Your Information Below
              <div>
                <input
                  name="name"
                  placeholder="Name"
                  type="text"
                  value=""
                />
              </div>
              <div>
                <input
                  name="cardNumber"
                  placeholder="Card Number"
                  type="text"
                  value=""
                />
              </div>
              <div>
                <input
                  name="cvv2"
                  placeholder="CVV2"
                  type="number"
                  value=""
                />
              </div>
              <div>
                <div
                  class="expiration"
                >
                  <input
                    name="expirationMonth"
                    placeholder="Exp. Month"
                    type="number"
                    value=""
                  />
                  <input
                    name="expirationYear"
                    placeholder="Exp. Year"
                    type="number"
                    value=""
                  />
                </div>
                <div
                  class="expiration-errors"
                >
                  <div
                    class="error"
                  />
                  <div />
                </div>
              </div>
              <div
                class="logos"
              >
                <img
                  alt="Visa Logo"
                  class=""
                  src="visa-icon.png"
                />
                <img
                  alt="Amex Logo"
                  class=""
                  src="amex-icon.png"
                />
              </div>
              <input
                class="submit"
                disabled=""
                type="submit"
                value="Submit"
              />
            </form>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "form",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": Object {
            "cardNumber": "",
            "cardNumberError": false,
            "cardType": false,
            "cvv2": "",
            "cvv2Error": false,
            "expirationMonth": "",
            "expirationMonthError": false,
            "expirationYear": "",
            "expirationYearError": false,
            "formValid": false,
            "name": "",
            "nameError": false,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form
                      class="container"
                    >
                      Please Enter Your Information Below
                      <div>
                        <input
                          name="name"
                          placeholder="Name"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cardNumber"
                          placeholder="Card Number"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cvv2"
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />
                      </div>
                      <div>
                        <div
                          class="expiration"
                        >
                          <input
                            name="expirationMonth"
                            placeholder="Exp. Month"
                            type="number"
                            value=""
                          />
                          <input
                            name="expirationYear"
                            placeholder="Exp. Year"
                            type="number"
                            value=""
                          />
                        </div>
                        <div
                          class="expiration-errors"
                        >
                          <div
                            class="error"
                          />
                          <div />
                        </div>
                      </div>
                      <div
                        class="logos"
                      >
                        <img
                          alt="Visa Logo"
                          class=""
                          src="visa-icon.png"
                        />
                        <img
                          alt="Amex Logo"
                          class=""
                          src="amex-icon.png"
                        />
                      </div>
                      <input
                        class="submit"
                        disabled=""
                        type="submit"
                        value="Submit"
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <form
                      class="container"
                    >
                      Please Enter Your Information Below
                      <div>
                        <input
                          name="name"
                          placeholder="Name"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cardNumber"
                          placeholder="Card Number"
                          type="text"
                          value=""
                        />
                      </div>
                      <div>
                        <input
                          name="cvv2"
                          placeholder="CVV2"
                          type="number"
                          value=""
                        />
                      </div>
                      <div>
                        <div
                          class="expiration"
                        >
                          <input
                            name="expirationMonth"
                            placeholder="Exp. Month"
                            type="number"
                            value=""
                          />
                          <input
                            name="expirationYear"
                            placeholder="Exp. Year"
                            type="number"
                            value=""
                          />
                        </div>
                        <div
                          class="expiration-errors"
                        >
                          <div
                            class="error"
                          />
                          <div />
                        </div>
                      </div>
                      <div
                        class="logos"
                      >
                        <img
                          alt="Visa Logo"
                          class=""
                          src="visa-icon.png"
                        />
                        <img
                          alt="Amex Logo"
                          class=""
                          src="amex-icon.png"
                        />
                      </div>
                      <input
                        class="submit"
                        disabled=""
                        type="submit"
                        value="Submit"
                      />
                    </form>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <form
                    class="container"
                  >
                    Please Enter Your Information Below
                    <div>
                      <input
                        name="name"
                        placeholder="Name"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cardNumber"
                        placeholder="Card Number"
                        type="text"
                        value=""
                      />
                    </div>
                    <div>
                      <input
                        name="cvv2"
                        placeholder="CVV2"
                        type="number"
                        value=""
                      />
                    </div>
                    <div>
                      <div
                        class="expiration"
                      >
                        <input
                          name="expirationMonth"
                          placeholder="Exp. Month"
                          type="number"
                          value=""
                        />
                        <input
                          name="expirationYear"
                          placeholder="Exp. Year"
                          type="number"
                          value=""
                        />
                      </div>
                      <div
                        class="expiration-errors"
                      >
                        <div
                          class="error"
                        />
                        <div />
                      </div>
                    </div>
                    <div
                      class="logos"
                    >
                      <img
                        alt="Visa Logo"
                        class=""
                        src="visa-icon.png"
                      />
                      <img
                        alt="Amex Logo"
                        class=""
                        src="amex-icon.png"
                      />
                    </div>
                    <input
                      class="submit"
                      disabled=""
                      type="submit"
                      value="Submit"
                    />
                  </form>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "checkValidForm": [Function],
        "context": Object {},
        "handleFormChange": [Function],
        "handleSubmit": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "cardNumber": "",
          "cardNumberError": false,
          "cardType": false,
          "cvv2": "",
          "cvv2Error": false,
          "expirationMonth": "",
          "expirationMonthError": false,
          "expirationYear": "",
          "expirationYearError": false,
          "formValid": false,
          "name": "",
          "nameError": false,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <form
          class="container"
        >
          Please Enter Your Information Below
          <div>
            <input
              name="name"
              placeholder="Name"
              type="text"
              value=""
            />
          </div>
          <div>
            <input
              name="cardNumber"
              placeholder="Card Number"
              type="text"
              value=""
            />
          </div>
          <div>
            <input
              name="cvv2"
              placeholder="CVV2"
              type="number"
              value=""
            />
          </div>
          <div>
            <div
              class="expiration"
            >
              <input
                name="expirationMonth"
                placeholder="Exp. Month"
                type="number"
                value=""
              />
              <input
                name="expirationYear"
                placeholder="Exp. Year"
                type="number"
                value=""
              />
            </div>
            <div
              class="expiration-errors"
            >
              <div
                class="error"
              />
              <div />
            </div>
          </div>
          <div
            class="logos"
          >
            <img
              alt="Visa Logo"
              class=""
              src="visa-icon.png"
            />
            <img
              alt="Amex Logo"
              class=""
              src="amex-icon.png"
            />
          </div>
          <input
            class="submit"
            disabled=""
            type="submit"
            value="Submit"
          />
        </form>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Please Enter Your Information Below",
            <Name
              handleFormChange={[Function]}
              nameError={false}
              nameValue=""
            />,
            <CardNumber
              cardNumberError={false}
              cardNumberValue=""
              handleFormChange={[Function]}
            />,
            <CVV2
              cvv2Error={false}
              cvv2Value=""
              handleFormChange={[Function]}
            />,
            <ExpirationDate
              handleFormChange={[Function]}
              monthError={false}
              monthValue=""
              yearError={false}
              yearValue=""
            />,
            <div
              className="logos"
            >
              <img
                alt="Visa Logo"
                className=""
                src="visa-icon.png"
              />
              <img
                alt="Amex Logo"
                className=""
                src="amex-icon.png"
              />
            </div>,
            <input
              className="submit"
              disabled={true}
              type="submit"
              value="Submit"
            />,
          ],
          "className": "container",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          "Please Enter Your Information Below",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleFormChange": [Function],
              "nameError": false,
              "nameValue": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": <div>
                <input
                  name="name"
                  placeholder="Name"
                  type="text"
                  value=""
                />
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    name="name"
                    onChange={[Function]}
                    placeholder="Name"
                    type="text"
                    value=""
                  />,
                  null,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <input
                    name="name"
                    placeholder="Name"
                    type="text"
                    value=""
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "name",
                    "onChange": [Function],
                    "placeholder": "Name",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "input",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "cardNumberError": false,
              "cardNumberValue": "",
              "handleFormChange": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": <div>
                <input
                  name="cardNumber"
                  placeholder="Card Number"
                  type="text"
                  value=""
                />
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    name="cardNumber"
                    onChange={[Function]}
                    placeholder="Card Number"
                    type="text"
                    value=""
                  />,
                  null,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <input
                    name="cardNumber"
                    placeholder="Card Number"
                    type="text"
                    value=""
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "cardNumber",
                    "onChange": [Function],
                    "placeholder": "Card Number",
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "input",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "cvv2Error": false,
              "cvv2Value": "",
              "handleFormChange": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": <div>
                <input
                  name="cvv2"
                  placeholder="CVV2"
                  type="number"
                  value=""
                />
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    name="cvv2"
                    onChange={[Function]}
                    placeholder="CVV2"
                    type="number"
                    value=""
                  />,
                  null,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <input
                    name="cvv2"
                    placeholder="CVV2"
                    type="number"
                    value=""
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "name": "cvv2",
                    "onChange": [Function],
                    "placeholder": "CVV2",
                    "type": "number",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "input",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleFormChange": [Function],
              "monthError": false,
              "monthValue": "",
              "yearError": false,
              "yearValue": "",
            },
            "ref": null,
            "rendered": Object {
              "instance": <div>
                <div
                  class="expiration"
                >
                  <input
                    name="expirationMonth"
                    placeholder="Exp. Month"
                    type="number"
                    value=""
                  />
                  <input
                    name="expirationYear"
                    placeholder="Exp. Year"
                    type="number"
                    value=""
                  />
                </div>
                <div
                  class="expiration-errors"
                >
                  <div
                    class="error"
                  />
                  <div />
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="expiration"
                  >
                    <input
                      name="expirationMonth"
                      onChange={[Function]}
                      placeholder="Exp. Month"
                      type="number"
                      value=""
                    />
                    <input
                      name="expirationYear"
                      onChange={[Function]}
                      placeholder="Exp. Year"
                      type="number"
                      value=""
                    />
                  </div>,
                  <div
                    className="expiration-errors"
                  >
                    <div
                      className="error"
                    />
                    <div />
                  </div>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="expiration"
                  >
                    <input
                      name="expirationMonth"
                      placeholder="Exp. Month"
                      type="number"
                      value=""
                    />
                    <input
                      name="expirationYear"
                      placeholder="Exp. Year"
                      type="number"
                      value=""
                    />
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <input
                        name="expirationMonth"
                        onChange={[Function]}
                        placeholder="Exp. Month"
                        type="number"
                        value=""
                      />,
                      <input
                        name="expirationYear"
                        onChange={[Function]}
                        placeholder="Exp. Year"
                        type="number"
                        value=""
                      />,
                    ],
                    "className": "expiration",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <input
                        name="expirationMonth"
                        placeholder="Exp. Month"
                        type="number"
                        value=""
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "expirationMonth",
                        "onChange": [Function],
                        "placeholder": "Exp. Month",
                        "type": "number",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "input",
                    },
                    Object {
                      "instance": <input
                        name="expirationYear"
                        placeholder="Exp. Year"
                        type="number"
                        value=""
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "name": "expirationYear",
                        "onChange": [Function],
                        "placeholder": "Exp. Year",
                        "type": "number",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="expiration-errors"
                  >
                    <div
                      class="error"
                    />
                    <div />
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="error"
                      />,
                      <div />,
                    ],
                    "className": "expiration-errors",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <div
                        class="error"
                      />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "error",
                      },
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "div",
                    },
                    Object {
                      "instance": <div />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": <div
              class="logos"
            >
              <img
                alt="Visa Logo"
                class=""
                src="visa-icon.png"
              />
              <img
                alt="Amex Logo"
                class=""
                src="amex-icon.png"
              />
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <img
                  alt="Visa Logo"
                  className=""
                  src="visa-icon.png"
                />,
                <img
                  alt="Amex Logo"
                  className=""
                  src="amex-icon.png"
                />,
              ],
              "className": "logos",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <img
                  alt="Visa Logo"
                  class=""
                  src="visa-icon.png"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Visa Logo",
                  "className": "",
                  "src": "visa-icon.png",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "img",
              },
              Object {
                "instance": <img
                  alt="Amex Logo"
                  class=""
                  src="amex-icon.png"
                />,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Amex Logo",
                  "className": "",
                  "src": "amex-icon.png",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "img",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": <input
              class="submit"
              disabled=""
              type="submit"
              value="Submit"
            />,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "submit",
              "disabled": true,
              "type": "submit",
              "value": "Submit",
            },
            "ref": null,
            "rendered": Array [
              undefined,
            ],
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
